<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:rs="com.rubenswieringa.book.*"
				   width="850" height="650" backgroundColor="#F3F3F3" cornerRadius="5" creationComplete="initBottomPageList(event)">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.rubenswieringa.book.*;
			import com.yzl.constant.PageLabelUitl;
			import com.yzl.valueObject.PageContainerVO;
			import com.yzl.view.pageGroup;
			import com.yzl.view.previewPageGroup;
			
			import flash.filters.DropShadowFilter;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Image;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			import mx.managers.PopUpManager;
			
			import spark.components.Group;
			import spark.components.Label;
			import spark.primitives.Rect;
			
			public var pageContainer:PageContainerVO;
			
			[Bindable]
			private var tearBtnVisible:Boolean = false;
			
			private var myBook:Book;
			
			private var isAutoFlip:Boolean = false;
			//初始化底部页面列表
			public function initBottomPageList(event:FlexEvent):void
			{
				
				myBook = new Book();
				myBook.x = 25;
				myBook.y = 25;
				myBook.width=800;
				myBook.height=530;
				myBook.openAt=0;
				myBook.autoFlipDuration=600;
				myBook.easing=0.7;
				myBook.regionSize=150;
				myBook.sideFlip=true;
				myBook.hardCover=true;
				myBook.hover=true;
				myBook.snap=false;
				myBook.flipOnClick=true;
				
				//阴影
				var dropShowFilter:flash.filters.DropShadowFilter = new flash.filters.DropShadowFilter(4,45,0,0.3);
				var filters:Array = new Array(dropShowFilter);
				
				//封2
				var emptyImg:Image = new Image();
				emptyImg.maintainAspectRatio = false;
				emptyImg.source = "assets/empty.jpg";
				emptyImg.width = 400;
				emptyImg.height = 530;
				emptyImg.filters = filters;
				
				var emptyImg3:Image = new Image();
				emptyImg3.maintainAspectRatio = false;
				emptyImg3.source = "assets/empty.jpg";
				emptyImg3.width = 400;
				emptyImg3.height = 530;
				emptyImg3.filters = filters;

				//封2
				var emptyPage:Page = new Page();
				emptyPage.addChild(emptyImg);
				
				//封3
				var emptyPage3:Page = new Page();
				emptyPage3.addChild(emptyImg3);
				
				//添加内容页
				for(var i:int = 0;i<pageContainer.numPages;i++)
				{
					var pageModel:previewPageGroup= new previewPageGroup();
					pageModel.model = pageContainer.getChildAt(i);
					
					var gp:Group = new Group();
					var page:Page = new Page();
					gp.width = 400;
					gp.height = 530;
					pageModel.width = pageModel.model.templateW;
					pageModel.height = pageModel.model.templateH;
					pageModel.scaleX = 400/pageModel.model.width;					
					pageModel.scaleY = pageModel.scaleX;					
					gp.addElement(pageModel);
					page.addChild(gp);
					myBook.addChild(page);					
					gp.clipAndEnableScrolling = true;
					//gp.filters = filters;
					
					if(i==0)
					{
						pageModel.scaleX = 800/pageModel.model.width;
						
						pageModel.scaleY = pageModel.scaleX;
						pageModel.x = -400;
						myBook.addChild(emptyPage);
					}
					//加封3和封底
					if(i == pageContainer.numPages-1)
					{
						var pageModel4:previewPageGroup= new previewPageGroup();
						pageModel4.model = pageContainer.getChildAt(0);
						
						
						var gp4:Group = new Group();
						var page4:Page = new Page();
						gp4.filters = filters;
						gp4.width = 400;
						gp4.height = 530;
						
						pageModel4.width = pageModel4.model.templateW;
						pageModel4.height = pageModel4.model.templateH;
						pageModel4.scaleX = 800/pageModel4.model.width;
						
						pageModel4.scaleY = pageModel4.scaleX;
												
						//加封3
						
						myBook.addChild(emptyPage3);
						
						//加封4
						
						gp4.addElement(pageModel4);
						page4.addChild(gp4);
						myBook.addChild(page4);
						gp4.clipAndEnableScrolling = true;
					}
				}
				
				
				
				myBook.addEventListener(BookEvent.PAGE_TORN, onPageTorn);
				this.addElement(myBook);
			}

			private function onPageTorn (event:BookEvent):void {
				
			}
			
			protected function close_clickHandler(event:MouseEvent):void
			{
				myBook.cancelGotoPage();
				PopUpManager.removePopUp(this);
			}
			
			protected function prevPage_clickHandler(event:MouseEvent):void
			{
				myBook.prevPage();
			}
			
			protected function nextPage_clickHandler(event:MouseEvent):void
			{
				myBook.nextPage();	
			}
			
			protected function autoFlip_clickHandler(event:MouseEvent):void
			{
				if(myBook.currentPage>=myBook.pages.length-1)
				{
					myBook.gotoPage(myBook.pages.getItemAt(0));
				}
				else
				{
					myBook.gotoPage(myBook.pages.getItemAt(myBook.pages.length-1));
				}
				
			}
			
			protected function fristPage_clickHandler(event:MouseEvent):void
			{
				myBook.fristPage();
				
			}
			
			protected function last_clickHandler(event:MouseEvent):void
			{
				
				myBook.lastPage();
			}
			
		]]>
	</fx:Script>
	<s:Group x="118" y="584" width="596" height="48">
		<s:Button x="114" y="15" label="上页" click="prevPage_clickHandler(event)"/>
		<s:Button x="192" y="15" label="下页" click="nextPage_clickHandler(event)"/>
		<s:Button x="390" y="15" label="自动翻" click="autoFlip_clickHandler(event)"/>
		<s:Button x="485" y="15" label="退出预览" click="close_clickHandler(event)"/>
		<s:Button x="34" y="15" label="封面" click="fristPage_clickHandler(event)"/>
		<s:Button x="270" y="15" label="封底" click="last_clickHandler(event)"/>
	</s:Group>
	
</s:BorderContainer>
