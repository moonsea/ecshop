<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx" width="600" height="400">
	
	<fx:Script>
		<![CDATA[
			import flash.text.engine.FontPosture;
			import flash.text.engine.FontWeight;
			
			import flashx.textLayout.formats.TextAlign;
			import flashx.textLayout.formats.TextDecoration;
			import flashx.textLayout.formats.TextLayoutFormat;
			
			import mx.collections.ArrayCollection;
			import mx.events.ColorPickerEvent;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			private var DEFAULT_FONT:Number = 1;
			private var DEFAULT_FONTSIZE:Number = 2;
			
			private var prevSearchTerm:String = '';
			
			protected function editor_selectionChangeHandler(evt:FlexEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				boldBtn.selected = (txtLayFmt.fontWeight == FontWeight.BOLD);
				italBtn.selected = (txtLayFmt.fontStyle == FontPosture.ITALIC);
				underBtn.selected = (txtLayFmt.textDecoration == TextDecoration.UNDERLINE);
				colorCP.selectedColor = txtLayFmt.color;
			}
			
			protected function fontDDL_changeHandler(evt:IndexChangeEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				txtLayFmt.fontFamily = fontDDL.selectedItem;
				textArea.setFormatOfRange(txtLayFmt,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				textArea.setFocus();
			}
			
			protected function sizeDDL_changeHandler(evt:IndexChangeEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				txtLayFmt.fontSize = sizeDDL.selectedItem;
				textArea.setFormatOfRange(txtLayFmt,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				textArea.setFocus();
			}
			
			protected function boldBtn_clickHandler(evt:MouseEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				txtLayFmt.fontWeight = (txtLayFmt.fontWeight == FontWeight.BOLD) ? FontWeight.NORMAL : FontWeight.BOLD;
				textArea.setFormatOfRange(txtLayFmt,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				textArea.setFocus();
			}
			
			protected function italBtn_clickHandler(evt:MouseEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				txtLayFmt.fontStyle = (txtLayFmt.fontStyle == FontPosture.ITALIC) ? FontPosture.NORMAL : FontPosture.ITALIC;
				textArea.setFormatOfRange(txtLayFmt,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				textArea.setFocus();
			}
			
			protected function underBtn_clickHandler(evt:MouseEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				txtLayFmt.textDecoration = (txtLayFmt.fontStyle == TextDecoration.UNDERLINE) ? TextDecoration.NONE : TextDecoration.UNDERLINE;
				textArea.setFormatOfRange(txtLayFmt,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				textArea.setFocus();
			}
			
			protected function colorCP_changeHandler(evt:ColorPickerEvent):void {
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				txtLayFmt.color = colorCP.selectedColor;
				textArea.setFormatOfRange(txtLayFmt,
					textArea.selectionAnchorPosition,
					textArea.selectionActivePosition);
				textArea.setFocus();
			}

			protected function setDefaults(event:FlexEvent):void
			{
				var txtLayFmt:TextLayoutFormat = textArea.getFormatOfRange(null,
				textArea.selectionAnchorPosition,
				textArea.selectionActivePosition);
				fontDDL.selectedItem = fontList.source[DEFAULT_FONT];
				sizeDDL.selectedItem = fontSizeList.source[DEFAULT_FONTSIZE];
			}


		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout gap="0" />
	</s:layout>
	<mx:ControlBar width="100%" cornerRadius="0">
		<mx:ToolBar width="100%" horizontalGap="5">
			<s:DropDownList id="fontDDL"
							width="150"
							change="fontDDL_changeHandler(event);" creationComplete="setDefaults(event);">
				<s:dataProvider>
					<s:ArrayList id="fontList" source="[Arial,Times New Roman,Verdana,Trebuchet MS]" />
				</s:dataProvider>
			</s:DropDownList>
			<s:DropDownList id="sizeDDL"
							width="60"
							change="sizeDDL_changeHandler(event);">
				<s:dataProvider>
					<s:ArrayList id="fontSizeList" source="[8,10,12,14,16,24,36,72]" />
				</s:dataProvider>
			</s:DropDownList>
			<mx:ColorPicker id="colorCP"
							change="colorCP_changeHandler(event);" />
			<s:ToggleButton id="boldBtn"
							label="B"
							fontWeight="bold"
							width="30"
							click="boldBtn_clickHandler(event);" />
			<s:ToggleButton id="italBtn"
							label="I"
							fontStyle="italic"
							width="30"
							click="italBtn_clickHandler(event);" />
			<s:ToggleButton id="underBtn"
							label="U" 
							textDecoration="underline"
							width="30"
							click="underBtn_clickHandler(event);" />
		</mx:ToolBar>
	</mx:ControlBar>
	<s:TextArea id="textArea"
				focusedTextSelectionColor="0xBD1E53"  
				unfocusedTextSelectionColor="0xBD1E53" 
				inactiveTextSelectionColor="0x666666" 
				selectionHighlighting="always"
				width="100%" height="100%"
				minHeight="200"
				selectionChange="editor_selectionChangeHandler(event);">
	</s:TextArea>
</s:TitleWindow>
