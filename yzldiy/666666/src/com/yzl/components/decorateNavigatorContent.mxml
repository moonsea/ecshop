<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="840" height="130"
				   backgroundColor="#CCCCCC" borderVisible="false" cornerRadius="12"
				   creationComplete="decorate_creationCompleteHandler(event)">
	<fx:Metadata>
		[Event(name="showDecorate",type="com.yzl.events.MyCustomEvent")]
		[Event(name="hideDecorate",type="com.yzl.events.MyCustomEvent")]
		
		[Event(name="addDecorate",type="com.yzl.events.MyCustomEvent")]
		[Event(name="removeDecorate",type="com.yzl.events.MyCustomEvent")]
		
	</fx:Metadata>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.yzl.events.MyCustomEvent;
			import com.yzl.renderer.decoreateItemRenderer;
			import com.yzl.services.DecorateServices;
			import com.yzl.valueObject.DecoratorVO;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IViewCursor;
			import mx.controls.Image;
			import mx.core.EventPriority;
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.BorderContainer;
			
			public  var decorateServices:DecorateServices = new DecorateServices();
			
			[Bindable]
			public var decorateArrayList:ArrayCollection = new ArrayCollection();
			
			protected function decorate_creationCompleteHandler(event:FlexEvent):void
			{
				decorateServices.send();
				
				decorateArrayList = decorateServices.decorateList;
				
				this.addEventListener("showDecorate",showDecorateBigImg_Handle);
				this.addEventListener("hideDecorate",delDecorateBigImg_Handle);
				this.addEventListener("addDecorate",addDecorateHandle);
			}
			
			protected function addDecorateHandle(event:MyCustomEvent):void
			{
				var img:DecoratorVO = event.data as DecoratorVO;
				if(!getDecorateItem(img))
				{
					this.decorateArrayList.addItem(img);
				}
			}
			
			public function getDecorateItem(img:DecoratorVO):DecoratorVO
			{
				var existingItem:DecoratorVO;
				var cursor:IViewCursor = decorateArrayList.createCursor();
				var found:Boolean = cursor.findFirst(img);
				if(found)
				{
					existingItem = cursor.current as DecoratorVO;
				}
				return existingItem;
			}
			
			protected function showDecorateBigImg_Handle(event:MyCustomEvent):void
			{
				var img:Image = new Image();
				var showImage:BorderContainer = FlexGlobals.topLevelApplication.showBigImge;
				var windowHeight:Number = FlexGlobals.topLevelApplication.height;
				var loader:Loader = new Loader();
				var imgX:Number = event.data.imgX;
				var imgY:Number = event.data.imgY;
				showImage.x = event.data.imgX+75;
				//showImage.y = event.data.imgY-36;
				
				showImage.addElement(img);
				var urlRequest:URLRequest = new URLRequest(event.data.imgStr);
				loader.load(urlRequest);
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE,function(e:Event):void{
					
					var maxHeight:Number=400;
					img.source = loader.content;
					img.height=loader.content.height;
					img.width = loader.content.width;
					img.maxHeight = maxHeight;
					
					//trace("图片的宽度");
					
					if(img.height>maxHeight)
					{
						img.height = maxHeight;
						img.width = img.width*(maxHeight/loader.content.height);
						
					}
					
					showImage.height = img.height+10;
					showImage.width = img.width+10;
					img.verticalCenter = 0;
					img.horizontalCenter = 0;
					
					if(windowHeight<maxHeight)
					{
						maxHeight = windowHeight-54;
					}
					
					if(windowHeight - (maxHeight+showImage.x)<0)
					{
						showImage.x += windowHeight - (maxHeight+showImage.x)-44;						
					}
					
					
					var point:Point = new Point();
					point = (event.target as decoreateItemRenderer).localToGlobal(point);
					//检测当前鼠标位置
					if((FlexGlobals.topLevelApplication.mouseX >= imgX) && (FlexGlobals.topLevelApplication.mouseX<=imgX+75)
						&& (FlexGlobals.topLevelApplication.mouseY>=imgY)
						&& (FlexGlobals.topLevelApplication.mouseY<=imgY+75))
					{
						showImage.visible= true;
					}

					
				});
			}
			
			protected function delDecorateBigImg_Handle(event:MyCustomEvent):void
			{
					FlexGlobals.topLevelApplication.showBigImge.removeAllElements();
					FlexGlobals.topLevelApplication.showBigImge.visible = false;
				
			}
		]]>
	</fx:Script>
	
	<s:List id="decorateList" left="75" right="75" bottom="10" height="90" borderVisible="false"
			contentBackgroundColor="#CCCCCC" dataProvider="{decorateArrayList}"
			itemRenderer="com.yzl.renderer.decoreateItemRenderer">
		<s:layout>
			<s:TileLayout requestedColumnCount="{decorateArrayList.length}" 
						  verticalGap="20" verticalAlign="top" horizontalGap="10" horizontalAlign="center" />
		</s:layout>
	</s:List>
</s:BorderContainer>
