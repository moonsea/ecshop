<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true" >
	<fx:Metadata>
		[Event(name="showFrameBigImg",type="com.yzl.events.MyCustomEvent")]
		[Event(name="hideFrameBigImg",type="com.yzl.events.MyCustomEvent")]
	</fx:Metadata>
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import com.yzl.events.MyCustomEvent;
			import com.yzl.valueObject.FrameVO;
			import com.yzl.valueObject.VOName;
			
			import mx.core.DragSource;
			import mx.core.IUIComponent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import spark.primitives.BitmapImage;
			protected function bc_mouseOverHandler(event:MouseEvent):void
			{
				var point:Point = new Point();
				point = (event.currentTarget as BorderContainer).localToGlobal(point);
				var img:Object = {imgStr:data.thumbnailURL,imgX:point.x,imgY:point.y,imgWidth:img1.width,imgHeight:img1.height};
				var e:MyCustomEvent = new MyCustomEvent("showFrameBigImg",img);
				
				this.dispatchEvent(e);
			}
			
			protected function bc_mouseOutHandler(event:MouseEvent):void
			{
				var img:Object = {imgStr:data.thumbnailURL};
				var e:MyCustomEvent = new MyCustomEvent("hideFrameBigImg",img);
				
				this.dispatchEvent(e);
			}
			
			protected function image1_completeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				var img:Image = event.target as Image;
				
				if(img.contentHeight >img.contentWidth)
				{
					img1.height= img.contentHeight*(120/img.contentHeight);
					img1.width = img.contentWidth*(120/img.contentHeight);
				}
				else
				{
					img1.width = img.contentWidth*(120/img.contentWidth);
					img1.height= img.contentHeight*(120/img.contentWidth);
				}
				
				
			}
			
			protected function image2_clickHandle(event:MouseEvent):void
			{
				var img:FrameVO = data as FrameVO;
				var e:MyCustomEvent = new MyCustomEvent("removeFrame",img);
				bc.removeEventListener(MouseEvent.ROLL_OVER,bc_mouseOverHandler);
				bc.removeEventListener(MouseEvent.ROLL_OUT,bc_mouseOutHandler);
				this.dispatchEvent(e);
			}
			
			protected function del_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				del.visible = true;
			}
			
			protected function del_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				del.visible = false;
			}
			
			private function dropImage(event:MouseEvent,format:String):void
			{
				var ds:DragSource = new DragSource();
				var proxy:BitmapImage = new BitmapImage();
				var imageHandle:Group = new Group();
				proxy.source = img1.content;
				
				if(img1.content.height>img1.content.width)
				{
					proxy.width = img1.content.width*(200/img1.content.height);
					proxy.height = 200;
				}
				else
				{
					proxy.height = img1.content.height*(200/img1.content.width);
					proxy.width = 200;
				}
				
				imageHandle.addElement(proxy);
				ds.addData(data,format);
				DragManager.doDrag(event.currentTarget as IUIComponent,ds,event,imageHandle);
			}
			

			
		]]>
	</fx:Script>
	<s:Group mouseOver="del_mouseOverHandler(event)" mouseOut="del_mouseOutHandler(event)" >
		
	<s:BorderContainer dropShadowVisible="true" top="0" right="0" id="bc" rollOver="bc_mouseOverHandler(event)" rollOut="bc_mouseOutHandler(event)"
					   borderVisible="false" width="{img1.contentWidth}" height="{img1.contentHeight}" 
					   toolTip="请拖动画框到照片上">
		
		<mx:Image useHandCursor="true" buttonMode="true" id="img1" source="{data.thumbnailURL}" horizontalCenter="0" verticalCenter="0"
				  complete="image1_completeHandler(event)"  mouseDown="dropImage(event,VOName.DisplayObject)" />
		
	</s:BorderContainer>
	<mx:Image id="del" buttonMode="true" visible="false" click="image2_clickHandle(event)" source="assets/x.gif" top="1" right="1" />
		
	</s:Group>
</s:ItemRenderer>
