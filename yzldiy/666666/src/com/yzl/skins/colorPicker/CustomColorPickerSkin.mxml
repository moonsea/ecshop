<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		minWidth="22"
		minHeight="22"
		xmlns:colorPicker="msi.components.colorPicker.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.core.colorPicker.CustomColorPicker")]
	</fx:Metadata>
	
	
	
	<s:Group width="100%"
			 height="100%">
		<s:Rect left="0" right="0" top="0" bottom="0" >
			<s:fill>
				<s:SolidColor id="gradcolor" color="#ffffff"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="#000000"/>
			</s:stroke>
		</s:Rect>
		<s:Rect left="3" right="3" top="3" bottom="3" >
			<s:fill>
				<s:SolidColor color="{hostComponent.selectedColor}"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="#000000"/>
			</s:stroke>
		</s:Rect>
		<s:Group right="2" bottom="2" width="6" height="6">
			<s:Rect left="0" right="0" top="0" bottom="0" >
				<s:fill>
					<s:SolidColor id="triangleColor" color="#ffffff"/>
				</s:fill>
			</s:Rect>
			<s:Path x="1.29297"
					y="1.64746"
					winding="nonZero"
					data="M2.03906 0 4.07813 0 3.05859 1.58301 2.03906 3.16699 1.01953 1.58301 0 0 2.03906 0Z">
				<s:fill>
					<s:SolidColor color="#000000"/>
				</s:fill>
			</s:Path>
		</s:Group>
	</s:Group>
	<s:Button id="open" 
			  width="100%"
			  height="100%"
			  alpha="0"
			  mouseDown="{gradcolor.color=13421772; triangleColor.color=13421772;}"
			  mouseUp="{gradcolor.color=16777215; triangleColor.color=16777215;}"/>
	<s:PopUpAnchor width="100%"
				   id="popUp"
				   x="5"
				   y="30"
				   height="100%">
		<s:popUp>
			<s:Group width="100%"
					 height="100%"
					 id="popUpGroup">
				<s:Rect right="0"
						bottom="0"
						left="0"
						top="0">
					<s:fill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="#FFFFFF"
											 ratio="0"
											 alpha=".5"/>
							<s:GradientEntry color="#616265"
											 ratio=".7"
											 alpha=".5"/>
						</s:LinearGradient>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="#000000"/>
					</s:stroke>

				</s:Rect>


				<s:VGroup width="100%"
						  height="100%"
						  paddingBottom="5"
						  paddingLeft="5"
						  paddingRight="5"
						  paddingTop="5">

					<s:HGroup width="100%"
							  height="100%">

						<s:Rect x="10"
								y="10"
								width="42"
								height="20">
							<s:fill>
								<s:SolidColor id="selectedcolor"
											  color="{hostComponent.focusColor}"/>
							</s:fill>
							<s:stroke>
								<s:SolidColorStroke color="#FFFFFF"/>
							</s:stroke>
						</s:Rect>
						<s:TextInput id="title"
									 width="72"
									 height="20"
									 paddingLeft="5"
									 top="18"
									 restrict="a-f A-F 0-9"
									 maxChars="6"
									 horizontalCenter="0"/>
					</s:HGroup>

					<s:List id="colorList"
							borderColor="0x000000"
							contentBackgroundColor="0x000000"
							dataProvider="{hostComponent.colorArray}">

						<s:layout>
							<s:TileLayout columnAlign="left"
										  horizontalGap="1"
										  requestedColumnCount="20"
										  requestedRowCount="12"
										  verticalGap="1"
										  columnWidth="10"
										  rowHeight="10"/>
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:ItemRenderer click="itemrenderer1_clickHandler(event)"
												mouseOver="itemrenderer1_mouseOverHandler(event)"
												mouseOut="itemrenderer1_mouseOutHandler(event)">
									<fx:Script>
										<![CDATA[
											import com.core.colorPicker.CustomColorPickerEvent;

											protected var selectedcolor:uint;
											private var isDataChange:Boolean;
											private var _data:Object;

											override public function get data():Object
											{
												return _data;
											}

											override public function set data(value:Object):void
											{
												_data=value;

												isDataChange=true;
												invalidateProperties();
											}

											override protected function commitProperties():void
											{
												super.commitProperties();
												if (isDataChange)
												{
													rect.color=_data.color;
												}
											}

											protected function itemrenderer1_mouseOverHandler(event:MouseEvent):void
											{
												var evt:CustomColorPickerEvent=new CustomColorPickerEvent(CustomColorPickerEvent.FOCUS_COLOR, true);
												evt.color=rect.color;
												dispatchEvent(evt);
												border.visible=true;
											}

											protected function itemrenderer1_mouseOutHandler(event:MouseEvent):void
											{
												border.visible=false;
											}

											protected function itemrenderer1_clickHandler(event:MouseEvent):void
											{
												var evt:CustomColorPickerEvent=new CustomColorPickerEvent(CustomColorPickerEvent.SELECTED_COLOR, true);
												evt.color=rect.color;
												dispatchEvent(evt);
											}
										]]>
									</fx:Script>

									<s:Rect left="0"
											right="0"
											top="0"
											bottom="0">
										<s:fill>
											<s:SolidColor id="rect"/>
										</s:fill>

									</s:Rect>
									<s:Rect id="border"
											left="0"
											right="0"
											top="0"
											bottom="0"
											visible="false">
										<s:stroke>
											<s:SolidColorStroke color="#FFFFFF"/>
										</s:stroke>
									</s:Rect>

								</s:ItemRenderer>
							</fx:Component>

						</s:itemRenderer>

					</s:List>
				</s:VGroup>
			</s:Group>
		</s:popUp>
	</s:PopUpAnchor>
</s:Skin>
